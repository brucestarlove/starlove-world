---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Bruce Starlove - Personal Website" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="cyber-bg"></div>
    <main class="main-content">
      <slot />
    </main>
    <div class="taskbar">
      <div class="taskbar-content">
        <div class="taskbar-left">
          <button class="logo-button" id="logoButton">
            <div class="star-logo">
              <svg viewBox="0 0 24 24" width="24" height="24">
                <path
                  d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"
                  fill="currentColor"></path>
              </svg>
            </div>
          </button>
          <div class="menu-overlay" id="menuOverlay">
            <div class="menu-content">
              <nav class="menu-nav">
                <a href="/" class="menu-item">Home</a>
                <a href="/about" class="menu-item">About</a>
                <a href="/projects" class="menu-item">Projects</a>
                <a href="/blog" class="menu-item">Blog</a>
                <a href="/contact" class="menu-item">Contact</a>
              </nav>
            </div>
          </div>
        </div>
        <div class="taskbar-center">
          <div class="window-title">
            <span class="app-icon">‚òÖ</span>
            <span class="app-name">{title}</span>
          </div>
        </div>
        <div class="taskbar-right">
          <button class="theme-toggle" id="themeToggle">
            <span class="theme-icon cityscape-icon">üè¢</span>
            <span class="theme-icon forestscape-icon">üå≤</span>
            <span class="theme-icon starscape-icon">‚ú®</span>
          </button>
        </div>
      </div>
    </div>
  </body>
</html>

<style>
  :root {
    --primary-bg: #0f172a;
    --secondary-bg: #1e293b;
    --accent-bg: #3b82f6;
    --text-primary: #f1f5f9;
    --text-secondary: #94a3b8;
    --border-color: #334155;
    --glow-color: #60a5fa;
    --taskbar-bg: rgba(15, 23, 42, 0.95);
    --taskbar-border: #1e293b;
  }

  [data-theme="cityscape"] {
    --primary-bg: #0f172a;
    --secondary-bg: #1e293b;
    --accent-bg: #3b82f6;
    --text-primary: #f1f5f9;
    --text-secondary: #94a3b8;
    --border-color: #334155;
    --glow-color: #60a5fa;
    --taskbar-bg: rgba(15, 23, 42, 0.95);
    --taskbar-border: #1e293b;
  }

  [data-theme="forestscape"] {
    --primary-bg: #0f172a;
    --secondary-bg: #1e293b;
    --accent-bg: #22c55e;
    --text-primary: #f1f5f9;
    --text-secondary: #94a3b8;
    --border-color: #334155;
    --glow-color: #4ade80;
    --taskbar-bg: rgba(15, 23, 42, 0.95);
    --taskbar-border: #1e293b;
  }

  [data-theme="starscape"] {
    --primary-bg: #0f172a;
    --secondary-bg: #1e293b;
    --accent-bg: #fbbf24;
    --text-primary: #f1f5f9;
    --text-secondary: #94a3b8;
    --border-color: #334155;
    --glow-color: #fcd34d;
    --taskbar-bg: rgba(15, 23, 42, 0.95);
    --taskbar-border: #1e293b;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: system-ui, sans-serif;
    background: var(--primary-bg);
    color: var(--text-primary);
    overflow-x: hidden;
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
    position: relative;
    padding-bottom: 60px;
    margin: 0;
    padding-top: 0;
    padding-left: 2rem;
    padding-right: 2rem;
  }

  /* .cyber-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at 20% 80%,
        rgba(59, 130, 246, 0.1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(96, 165, 250, 0.1) 0%,
        transparent 50%
      ),
      linear-gradient(
        135deg,
        transparent 0%,
        rgba(59, 130, 246, 0.05) 50%,
        transparent 100%
      );
    pointer-events: none;
    z-index: -1;
  } */

  .cyber-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("public/cityscape01.jpg");
    background-repeat: no-repeat;
    background-position: bottom center;
    background-size: cover;
    pointer-events: none;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.8s ease-out;
  }

  .cyber-bg.loaded {
    opacity: 1;
  }

  [data-theme="forestscape"] .cyber-bg {
    background-image: url("public/forestscape01.jpg");
  }

  [data-theme="starscape"] .cyber-bg {
    background-image: url("public/starscape01.jpg");
  }

  /* [data-theme="dark"] .cyber-bg {
    background: radial-gradient(
        circle at 20% 80%,
        rgba(59, 130, 246, 0.2) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(96, 165, 250, 0.2) 0%,
        transparent 50%
      ),
      linear-gradient(
        135deg,
        transparent 0%,
        rgba(59, 130, 246, 0.1) 50%,
        transparent 100%
      );
  } */

  .main-content {
    padding: 1rem;
    max-width: 800px;
    min-height: calc(100vh - 60px);
    position: relative;
  }

  .taskbar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 60px;
    background: var(--taskbar-bg);
    border-top: 1px solid var(--taskbar-border);
    display: flex;
    align-items: center;
    justify-content: start;
    width: 800px;
    padding: 0;
    backdrop-filter: blur(10px);
    z-index: 1000;
  }

  .taskbar-content {
    width: 100%;
    max-width: 800px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 1rem;
  }

  .taskbar-left,
  .taskbar-right {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .taskbar-center {
    flex: 1;
    display: flex;
    justify-content: center;
  }

  .logo-button {
    width: 40px;
    height: 40px;
    border: none;
    background: var(--accent-bg);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    position: relative;
    z-index: 1001;
  }

  .logo-button:hover {
    background: var(--glow-color);
    box-shadow: 0 0 20px rgba(96, 165, 250, 0.5);
  }

  .star-logo {
    transition: transform 0.3s ease;
  }

  .logo-button.active .star-logo {
    transform: rotate(270deg);
  }

  .menu-overlay {
    position: fixed;
    bottom: 60px;
    left: 0;
    right: 0;
    top: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 999;
  }

  .menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .menu-content {
    position: absolute;
    bottom: 0;
    left: 1rem;
    background: var(--secondary-bg);
    border: 1px solid var(--border-color);
    border-radius: 12px 12px 0 0;
    min-width: 200px;
    box-shadow: 0 -10px 30px rgba(0, 0, 0, 0.2);
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .menu-overlay.active .menu-content {
    transform: translateY(0);
  }

  .menu-nav {
    padding: 1rem 0;
  }

  .menu-item {
    display: block;
    padding: 0.75rem 1.5rem;
    color: var(--text-primary);
    text-decoration: none;
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
  }

  .menu-item:hover {
    background: var(--accent-bg);
    color: white;
    border-left-color: var(--glow-color);
  }

  .window-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--secondary-bg);
    padding: 0.5rem 1rem;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .app-icon {
    color: var(--accent-bg);
    font-size: 0.875rem;
  }

  .app-name {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
  }

  .theme-toggle {
    width: 40px;
    height: 40px;
    border: none;
    background: var(--secondary-bg);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 1px solid var(--border-color);
    position: relative;
  }

  .theme-toggle:hover {
    background: var(--accent-bg);
    color: white;
  }

  .theme-icon {
    position: absolute;
    transition: all 0.3s ease;
    opacity: 0;
    transform: rotate(180deg);
  }

  [data-theme="cityscape"] .cityscape-icon,
  [data-theme="forestscape"] .forestscape-icon,
  [data-theme="starscape"] .starscape-icon {
    opacity: 1;
    transform: rotate(0deg);
  }

  @media (max-width: 768px) {
    .main-content {
      padding: 0.75rem;
    }

    .taskbar-content {
      padding: 0 0.5rem;
    }

    .taskbar {
      padding: 0 0.5rem;
    }

    .window-title {
      padding: 0.25rem 0.75rem;
    }

    .app-name {
      font-size: 0.75rem;
    }

    .menu-content {
      left: 0.5rem;
      right: 0.5rem;
      min-width: auto;
    }
  }
</style>

<script>
  const logoButton = document.getElementById("logoButton");
  const menuOverlay = document.getElementById("menuOverlay");
  const themeToggle = document.getElementById("themeToggle");

  // Menu toggle functionality
  logoButton?.addEventListener("click", () => {
    logoButton.classList.toggle("active");
    menuOverlay?.classList.toggle("active");
  });

  // Close menu when clicking overlay
  menuOverlay?.addEventListener("click", (e) => {
    if (e.target === menuOverlay) {
      logoButton?.classList.remove("active");
      menuOverlay.classList.remove("active");
    }
  });

  // Theme toggle functionality
  const themes = ["cityscape", "forestscape", "starscape"];

  const setTheme = (theme: string) => {
    document.documentElement.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);
  };

  const getTheme = () => {
    const saved = localStorage.getItem("theme");
    if (saved && themes.includes(saved)) {
      return saved;
    }
    return "cityscape"; // Default theme
  };

  // Initialize theme
  setTheme(getTheme());

  themeToggle?.addEventListener("click", () => {
    const currentTheme =
      document.documentElement.getAttribute("data-theme") || "cityscape";
    const currentIndex = themes.indexOf(currentTheme);
    const nextIndex = (currentIndex + 1) % themes.length;
    const newTheme = themes[nextIndex];
    setTheme(newTheme);
  });

  // Handle system theme changes (removed since we're using custom themes)

  // Load background with content reveal
  document.addEventListener("starExplosionComplete", () => {
    const cyberBg = document.querySelector(".cyber-bg");
    if (cyberBg) {
      cyberBg.classList.add("loaded");
    }
  });

  // Fallback background loading
  setTimeout(() => {
    const cyberBg = document.querySelector(".cyber-bg");
    if (cyberBg && !cyberBg.classList.contains("loaded")) {
      cyberBg.classList.add("loaded");
    }
  }, 3000);
</script>
