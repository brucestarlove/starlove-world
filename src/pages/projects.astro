---
import Layout from "../layouts/Layout.astro";
import PageHeader from "../components/ui/PageHeader.astro";
import ContentReveal from "../components/ui/ContentReveal.astro";
import TagList from "../components/ui/TagList.astro";
import { getCollection } from "astro:content";

const projects = await getCollection("projects");
const projectsByCategory = projects.reduce(
  (acc, project) => {
    const category = project.data.category;
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(project);
    return acc;
  },
  {} as Record<string, typeof projects>
);

const categories = Object.keys(projectsByCategory);
---

<Layout title="Projects">
  <ContentReveal id="projectsContent" class="content">
    <PageHeader
      title="Projects"
      subtitle="A collection of things I've built, am building or planning to build"
      titleClass="title-gradient"
    />

    <div class="sections animate-content-medium">
      {
        categories.map((category, categoryIndex) => (
          <div class="section animate-slideup" style={`animation-delay: ${0.8 + categoryIndex * 0.2}s`}>
            <h2 class="section-title animate-title-delayed">{category}</h2>
            <div class="posts-list">
              {projectsByCategory[category].map((project, projectIndex) => (
                <article
                  class="post-item animate-content-fast"
                  style={`--post-color: ${project.data.color}; animation-delay: ${1.2 + categoryIndex * 0.2 + projectIndex * 0.1}s`}
                  data-category={category.toLowerCase()}
                  data-title={project.data.title.toLowerCase()}
                  data-description={project.data.description.toLowerCase()}
                >
                  <a href={`/projects/${project.slug}`} class="item-link">
                    <div
                      class="item-star"
                      style={`background-color: ${project.data.color}`}
                    >
                      â˜…
                    </div>
                    <div class="item-content">
                      <div class="item-header">
                        <h3 class="item-title">{project.data.title}</h3>
                        <span
                          class={`status-badge status-${project.data.status}`}
                        >
                          {project.data.status === "in-progress"
                            ? "In Progress"
                            : project.data.status === "completed"
                              ? "Completed"
                              : "Planning"}
                        </span>
                      </div>
                      <p class="item-description">{project.data.description}</p>
                      <TagList
                        tags={project.data.technologies}
                        class="project-technologies"
                      />
                    </div>
                  </a>
                </article>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </ContentReveal>
</Layout>
