---
import Layout from "../layouts/Layout.astro";
import PageHeader from "../components/ui/PageHeader.astro";
import ContentReveal from "../components/ui/ContentReveal.astro";
import TagList from "../components/ui/TagList.astro";
import { getCollection } from "astro:content";

const projects = await getCollection("projects");
const projectsByCategory = projects.reduce(
  (acc, project) => {
    const category = project.data.category;
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(project);
    return acc;
  },
  {} as Record<string, typeof projects>
);

const categories = Object.keys(projectsByCategory);
---

<Layout title="Projects">
  <ContentReveal id="projectsContent" class="projects-content">
    <PageHeader
      title="Projects"
      subtitle="A collection of things I've built, am building or planning to build"
      titleClass="title-gradient"
    />

    <div class="sections">
      { categories.map((category) => (
        <h2 class="section-title">{category}</h2>
        <div class="projects-list">
          {projectsByCategory[category].map((project) => (
            <article
              class="project-item"
              style={`--project-color: ${project.data.color}`}
              data-category={category.toLowerCase()}
              data-title={project.data.title.toLowerCase()}
              data-description={project.data.description.toLowerCase()}
            >
              <a href={`/projects/${project.slug}`} class="project-link">
                <div
                  class="item-star"
                  style={`background-color: ${project.data.color}`}
                >
                  â˜…
                </div>
                <div class="item-content">
                  <div class="item-header">
                    <h3 class="item-title">{project.data.title}</h3>
                    <span
                      class={`status-badge status-${project.data.status}`}
                    >
                      {project.data.status === "in-progress"
                        ? "In Progress"
                        : project.data.status === "completed"
                          ? "Completed"
                          : "Planning"}
                    </span>
                  </div>
                  <p class="item-description">
                    {project.data.description}
                  </p>
                  <TagList
                    tags={project.data.technologies}
                    class="project-technologies"
                  />
                </div>
              </a>
            </article>
          ))}
        </div>
        ))
      }
    </div>
  </ContentReveal>

  <style>
    .projects-content {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.8s ease-out;
      padding-bottom: 6rem;
      padding-top: 0;
      margin-top: 0;
    }

    .projects-content.reveal {
      opacity: 1;
      transform: translateY(0);
    }

    /* Only hide content initially if JavaScript is available */
    .projects-content:not(.reveal) {
      opacity: 0;
      transform: translateY(20px);
    }
    
    .projects-list {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .project-item {
      transition: all 0.3s ease;
    }

    .project-link {
      width: 100%;
      display: flex;
      align-items: flex-start;
      gap: 0.75rem;
      padding: 1rem;
      background: linear-gradient(
        135deg,
        var(--secondary-bg) 0%,
        rgba(255, 255, 255, 0.02) 70%,
        transparent 100%
      );
      border-image: linear-gradient(
          135deg,
          var(--border-color) 0%,
          rgba(203, 213, 225, 0.3) 70%,
          transparent 100%
        )
        1;
      border-radius: 8px;
      text-decoration: none;
      color: inherit;
      transition: all 0.3s ease;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .project-link:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      border-color: var(--accent-bg);
      background: linear-gradient(to right, var(--project-color), transparent);
    }

    .project-star {
      width: 24px;
      height: 24px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 12px;
      font-weight: bold;
      flex-shrink: 0;
      margin-top: 2px;
    }

    /* Projects use shared .item-content, .item-header, .item-title, .item-description, .status-badge classes */

    .project-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem;
    }

    .tech-tag {
      padding: 0.25rem 0.5rem;
      background: var(--primary-bg);
      color: var(--text-secondary);
      font-size: 0.75rem;
      border-radius: 4px;
      border: 1px solid var(--border-color);
    }
    
    @media (max-width: 768px) {
      .project-link {
        padding: 0.75rem;
        gap: 0.5rem;
      }
    }
  </style>

</Layout>
