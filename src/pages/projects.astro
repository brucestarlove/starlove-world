---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const projects = await getCollection('projects');
const projectsByCategory = projects.reduce((acc, project) => {
  const category = project.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(project);
  return acc;
}, {} as Record<string, typeof projects>);

const categories = Object.keys(projectsByCategory);
---

<Layout title="Projects">
  <div class="projects-content" id="projectsContent">
    <nav class="projects-nav">
      <a href="/" class="back-button">
        <svg viewBox="0 0 24 24" width="20" height="20">
          <path
            fill="currentColor"
            d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
          ></path>
        </svg>
        Back to Home
      </a>
    </nav>

    <header class="projects-header">
      <h1 class="projects-title">Projects</h1>
      <p class="projects-subtitle">
        A collection of things I've built, am building, or planning to build
      </p>
    </header>

    <div class="projects-sections">
      {categories.map((category) => (
        <section class="category-section">
          <h2 class="category-title">{category}</h2>
          <div class="projects-list">
            {projectsByCategory[category].map((project) => (
              <article
                class="project-item"
                style={`--project-color: ${project.data.color}`}
                data-category={category.toLowerCase()}
                data-title={project.data.title.toLowerCase()}
                data-description={project.data.description.toLowerCase()}
              >
                <a href={`/projects/${project.slug}`} class="project-link">
                  <div
                    class="project-star"
                    style={`background-color: ${project.data.color}`}
                  >
                    â˜…
                  </div>
                  <div class="project-content">
                    <div class="project-header">
                      <h3 class="project-title">{project.data.title}</h3>
                      <span class={`status-badge status-${project.data.status}`}>
                        {project.data.status === 'in-progress' ? 'In Progress' : 
                         project.data.status === 'completed' ? 'Completed' : 'Planning'}
                      </span>
                    </div>
                    <p class="project-description">{project.data.description}</p>
                    <div class="project-technologies">
                      {project.data.technologies.map((tech) => (
                        <span class="tech-tag">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>
        </section>
      ))}
    </div>
  </div>

  <style>
    .projects-content {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.8s ease-out;
      padding-bottom: 6rem;
      padding-top: 0;
      margin-top: 0;
    }

    .projects-content.reveal {
      opacity: 1;
      transform: translateY(0);
    }

    /* Only hide content initially if JavaScript is available */
    .projects-content:not(.reveal) {
      opacity: 0;
      transform: translateY(20px);
    }

    .projects-nav {
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(20px);
      animation: contentReveal 0.6s ease-out 0.2s forwards;
    }

    .back-button {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      background: var(--secondary-bg);
      border: 1px solid var(--border-color);
      color: var(--text-secondary);
      padding: 0.75rem 1rem;
      border-radius: 8px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .back-button:hover {
      background: var(--accent-bg);
      border-color: var(--accent-bg);
      color: white;
      transform: translateX(-2px);
    }

    .projects-header {
      margin-bottom: 2rem;
      text-align: left;
    }

    .projects-title {
      font-size: clamp(2rem, 7vw, 3rem);
      font-weight: 700;
      background: linear-gradient(
        135deg,
        var(--accent-bg),
        var(--glow-color)
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 0.5rem;
      opacity: 0;
      transform: translateY(30px);
      animation: titleReveal 1s ease-out 0.3s forwards;
    }

    .projects-subtitle {
      font-size: 1.125rem;
      color: var(--text-secondary);
      opacity: 0;
      transform: translateY(20px);
      animation: contentReveal 0.8s ease-out 0.6s forwards;
    }

    .projects-sections {
      opacity: 0;
      transform: translateY(20px);
      animation: contentReveal 0.8s ease-out 0.9s forwards;
    }

    .category-section {
      margin-bottom: 3rem;
    }

    .category-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
      border-bottom: 2px solid var(--accent-bg);
      display: inline-block;
    }

    .projects-list {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .project-item {
      transition: all 0.3s ease;
    }

    .project-link {
      display: flex;
      align-items: flex-start;
      gap: 0.75rem;
      padding: 1rem;
      background: linear-gradient(
        135deg,
        var(--secondary-bg) 0%,
        rgba(255, 255, 255, 0.02) 70%,
        transparent 100%
      );
      border: 1px solid var(--border-color);
      border-radius: 8px;
      text-decoration: none;
      color: inherit;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .project-link:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      border-color: var(--accent-bg);
      background: linear-gradient(to right, var(--project-color), transparent);
    }

    .project-star {
      width: 24px;
      height: 24px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 12px;
      font-weight: bold;
      flex-shrink: 0;
      margin-top: 2px;
    }

    .project-content {
      flex: 1;
    }

    .project-header {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      margin-bottom: 0.5rem;
      flex-wrap: wrap;
    }

    .project-title {
      font-size: 1.125rem;
      font-weight: 600;
      color: var(--text-primary);
      margin: 0;
      line-height: 1.2;
    }

    .status-badge {
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
      border-radius: 4px;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.025em;
    }

    .status-completed {
      background: rgba(34, 197, 94, 0.2);
      color: #22c55e;
      border: 1px solid rgba(34, 197, 94, 0.3);
    }

    .status-in-progress {
      background: rgba(59, 130, 246, 0.2);
      color: #3b82f6;
      border: 1px solid rgba(59, 130, 246, 0.3);
    }

    .status-planning {
      background: rgba(245, 158, 11, 0.2);
      color: #f59e0b;
      border: 1px solid rgba(245, 158, 11, 0.3);
    }

    .project-description {
      color: var(--text-secondary);
      line-height: 1.4;
      margin-bottom: 0.75rem;
      font-size: 0.9rem;
    }

    .project-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem;
    }

    .tech-tag {
      padding: 0.25rem 0.5rem;
      background: var(--primary-bg);
      color: var(--text-secondary);
      font-size: 0.75rem;
      border-radius: 4px;
      border: 1px solid var(--border-color);
    }

    @keyframes titleReveal {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes contentReveal {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .projects-header {
        margin-bottom: 1.5rem;
      }

      .category-section {
        margin-bottom: 2rem;
      }

      .category-title {
        font-size: 1.25rem;
      }

      .project-link {
        padding: 0.75rem;
        gap: 0.5rem;
      }

      .project-header {
        gap: 0.5rem;
      }

      .project-title {
        font-size: 1rem;
      }

      .project-star {
        width: 20px;
        height: 20px;
        font-size: 10px;
      }

      .status-badge {
        font-size: 0.7rem;
        padding: 0.2rem 0.4rem;
      }

      .back-button {
        padding: 0.6rem 0.8rem;
        font-size: 0.85rem;
      }
    }
  </style>

  <script>
    function revealProjectsContent() {
      const projectsContent = document.getElementById("projectsContent");
      if (projectsContent && !projectsContent.classList.contains("reveal")) {
        projectsContent.classList.add("reveal");
      }
    }

    // Initialize immediately if DOM is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", revealProjectsContent);
    } else {
      revealProjectsContent();
    }

    // Also reveal after navigation
    document.addEventListener("astro:after-swap", revealProjectsContent);

    // Fallback reveal
    setTimeout(revealProjectsContent, 100);
  </script>
</Layout>