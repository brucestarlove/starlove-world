---
import Layout from "../../layouts/Layout.astro";
import { getAllProjects, getProjectBySlug } from "../../utils/projects.ts";

export async function getStaticPaths() {
  const projects = getAllProjects();
  return projects.map(project => ({
    params: { slug: project.slug },
    props: { project }
  }));
}

const { project } = Astro.props;

if (!project) {
  return Astro.redirect('/projects');
}
---

<Layout title={project.frontmatter.title}>
  <div class="project-detail" id="projectDetail">
    <nav class="project-nav">
      <button class="back-button" id="backButton">
        <svg viewBox="0 0 24 24" width="20" height="20">
          <path
            fill="currentColor"
            d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
          />
        </svg>
        Back to Projects
      </button>
    </nav>

    <header class="project-header">
      <div class="project-meta">
        <div
          class="project-star large"
          style={`background: linear-gradient(135deg, ${project.frontmatter.color}, ${project.frontmatter.color}dd)`}
        >
          â˜…
        </div>
        <div class="project-info">
          <h1 class="project-title">{project.frontmatter.title}</h1>
          <p class="project-description">{project.frontmatter.description}</p>
          <div class="project-details">
            <span class="project-category">{project.frontmatter.category}</span>
            <span class={`status-badge status-${project.frontmatter.status}`}>
              {project.frontmatter.status === 'in-progress' ? 'In Progress' : 
               project.frontmatter.status === 'completed' ? 'Completed' : 'Planning'}
            </span>
            <span class="project-date">{new Date(project.frontmatter.date).toLocaleDateString()}</span>
          </div>
        </div>
      </div>

      <div class="project-technologies">
        <h3>Technologies</h3>
        <div class="tech-list">
          {project.frontmatter.technologies.map((tech) => (
            <span class="tech-tag" key={tech}>
              {tech}
            </span>
          ))}
        </div>
      </div>

      {(project.frontmatter.link || project.frontmatter.github) && (
        <div class="project-links">
          {project.frontmatter.link && (
            <a href={project.frontmatter.link} class="project-link-btn" target="_blank" rel="noopener noreferrer">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z"
                />
              </svg>
              View Live
            </a>
          )}
          {project.frontmatter.github && (
            <a href={project.frontmatter.github} class="project-link-btn" target="_blank" rel="noopener noreferrer">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"
                />
              </svg>
              View Code
            </a>
          )}
        </div>
      )}
    </header>

    <main class="project-content">
      <div class="content-wrapper" set:html={project.content} />
    </main>
  </div>

  <style>
    .project-detail {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.8s ease-out;
      padding-bottom: 6rem;
      max-width: 800px;
    }

    .project-detail.reveal {
      opacity: 1;
      transform: translateY(0);
    }

    /* Only hide content initially if JavaScript is available */
    .project-detail:not(.reveal) {
      opacity: 0;
      transform: translateY(20px);
    }

    .project-nav {
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(20px);
      animation: contentReveal 0.6s ease-out 0.2s forwards;
    }

    .back-button {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      background: var(--secondary-bg);
      border: 1px solid var(--border-color);
      color: var(--text-secondary);
      padding: 0.75rem 1rem;
      border-radius: 8px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .back-button:hover {
      background: var(--accent-bg);
      border-color: var(--accent-bg);
      color: white;
      transform: translateX(-2px);
    }

    .project-header {
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(30px);
      animation: contentReveal 0.8s ease-out 0.4s forwards;
    }

    .project-meta {
      display: flex;
      gap: 1.5rem;
      margin-bottom: 2rem;
      align-items: flex-start;
    }

    .project-star.large {
      width: 64px;
      height: 64px;
      border-radius: 16px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 24px;
      font-weight: bold;
      flex-shrink: 0;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }

    .project-info {
      flex: 1;
    }

    .project-title {
      font-size: clamp(1.8rem, 5vw, 2.5rem);
      font-weight: 700;
      background: linear-gradient(
        135deg,
        var(--accent-bg),
        var(--glow-color)
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 0.5rem;
      line-height: 1.2;
    }

    .project-description {
      font-size: 1.125rem;
      color: var(--text-secondary);
      line-height: 1.5;
      margin-bottom: 1rem;
    }

    .project-details {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      align-items: center;
    }

    .project-category {
      padding: 0.5rem 1rem;
      background: var(--secondary-bg);
      color: var(--text-primary);
      border-radius: 6px;
      font-weight: 500;
      border: 1px solid var(--border-color);
    }

    .project-date {
      color: var(--text-secondary);
      font-size: 0.9rem;
    }

    .status-badge {
      padding: 0.5rem 1rem;
      font-size: 0.8rem;
      border-radius: 6px;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.025em;
    }

    .status-completed {
      background: rgba(34, 197, 94, 0.2);
      color: #22c55e;
      border: 1px solid rgba(34, 197, 94, 0.3);
    }

    .status-in-progress {
      background: rgba(59, 130, 246, 0.2);
      color: #3b82f6;
      border: 1px solid rgba(59, 130, 246, 0.3);
    }

    .status-planning {
      background: rgba(245, 158, 11, 0.2);
      color: #f59e0b;
      border: 1px solid rgba(245, 158, 11, 0.3);
    }

    .project-technologies {
      margin-bottom: 2rem;
    }

    .project-technologies h3 {
      font-size: 1.1rem;
      color: var(--text-primary);
      margin-bottom: 0.75rem;
      font-weight: 600;
    }

    .tech-list {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .tech-tag {
      padding: 0.5rem 1rem;
      background: var(--primary-bg);
      color: var(--text-secondary);
      font-size: 0.85rem;
      border-radius: 6px;
      border: 1px solid var(--border-color);
      font-weight: 500;
    }

    .project-links {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .project-link-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      background: var(--accent-bg);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      border: none;
      cursor: pointer;
    }

    .project-link-btn:hover {
      background: var(--glow-color);
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(59, 130, 246, 0.3);
    }

    .project-content {
      opacity: 0;
      transform: translateY(30px);
      animation: contentReveal 0.8s ease-out 0.6s forwards;
    }

    .content-wrapper {
      background: var(--secondary-bg);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      padding: 2rem;
      line-height: 1.6;
    }

    .content-wrapper h1,
    .content-wrapper h2,
    .content-wrapper h3 {
      color: var(--text-primary);
      margin-top: 1.5rem;
      margin-bottom: 0.75rem;
    }

    .content-wrapper h1:first-child {
      margin-top: 0;
    }

    .content-wrapper p {
      color: var(--text-secondary);
      margin-bottom: 1rem;
    }

    .content-wrapper ul,
    .content-wrapper ol {
      color: var(--text-secondary);
      margin-bottom: 1rem;
      padding-left: 1.5rem;
    }

    .content-wrapper li {
      margin-bottom: 0.5rem;
    }

    .content-wrapper strong {
      color: var(--accent-bg);
      font-weight: 600;
    }

    @keyframes contentReveal {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .project-meta {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
      }

      .project-star.large {
        width: 56px;
        height: 56px;
        font-size: 20px;
        align-self: center;
      }

      .project-details {
        justify-content: center;
      }

      .project-links {
        justify-content: center;
      }

      .content-wrapper {
        padding: 1.5rem;
      }

      .back-button {
        padding: 0.6rem 0.8rem;
        font-size: 0.85rem;
      }
    }
  </style>

  <script>
    // Reveal content after page load
    function revealContent() {
      const projectDetail = document.getElementById("projectDetail");
      if (projectDetail && !projectDetail.classList.contains("reveal")) {
        projectDetail.classList.add("reveal");
      }
    }

    // Back button functionality
    function setupBackButton() {
      const backButton = document.getElementById("backButton");
      if (backButton) {
        backButton.addEventListener("click", () => {
          window.history.back();
        });
      }
    }

    function initializeProjectDetail() {
      revealContent();
      setupBackButton();
    }

    // Initialize immediately if DOM is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initializeProjectDetail);
    } else {
      initializeProjectDetail();
    }

    // Also initialize after navigation
    document.addEventListener("astro:after-swap", initializeProjectDetail);

    // Fallback reveal
    setTimeout(revealContent, 100);
  </script>
</Layout>