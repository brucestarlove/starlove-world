---
import ContentDetailLayout from "../../components/layouts/ContentDetailLayout.astro";
import TagList from "../../components/ui/TagList.astro";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

type Props = {
  project: CollectionEntry<"projects">;
};

const { project } = Astro.props;
const { Content } = await project.render();
---

<ContentDetailLayout
  title={project.data.title}
  contentType="project"
  backHref="/projects"
  backText="Back to Projects"
>
  <header class="post-header" slot="header">
    <div class="post-meta">
      <div class="post-info">
        <h1 class="post-title">{project.data.title}</h1>
        <p class="post-excerpt">{project.data.description}</p>
        <div class="post-details">
          <span class="project-category">{project.data.category}</span>
          <span class={`status-badge status-${project.data.status}`}>
            {
              project.data.status === "in-progress"
                ? "In Progress"
                : project.data.status === "completed"
                  ? "Completed"
                  : "Planning"
            }
          </span>
          <span class="post-date">
            {project.data.date.toLocaleDateString()}
          </span>
        </div>
      </div>
    </div>

    <div class="project-technologies">
      <h3>Technologies</h3>
      <TagList tags={project.data.technologies} class="post-tags-header" />
    </div>

    {
      (project.data.link || project.data.github) && (
        <div class="project-links">
          {project.data.link && (
            <a
              href={project.data.link}
              class="project-link-btn"
              target="_blank"
              rel="noopener noreferrer"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z"
                />
              </svg>
              View Live
            </a>
          )}
          {project.data.github && (
            <a
              href={project.data.github}
              class="project-link-btn"
              target="_blank"
              rel="noopener noreferrer"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"
                />
              </svg>
              View Code
            </a>
          )}
        </div>
      )
    }
  </header>

  <Content />
</ContentDetailLayout>

<style>
  /* override */
  .status-badge {
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.85rem;
    font-weight: 500;
    border: 1px solid;
  }

  .project-category {
    color: var(--text-secondary);
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    background: var(--secondary-bg);
    border-radius: 6px;
    border: 1px solid var(--border-color);
  }

  .project-technologies {
    margin-bottom: 1.5rem;
  }

  .project-technologies h3 {
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.75rem;
  }

  .project-links {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .project-link-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: var(--accent-bg);
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: 1px solid var(--accent-bg);
  }

  .project-link-btn:hover {
    background: var(--glow-color);
    border-color: var(--glow-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  .project-link-btn svg {
    flex-shrink: 0;
  }

  @media (max-width: 768px) {
    .project-technologies {
      margin-bottom: 1rem;
    }

    .project-links {
      justify-content: center;
    }
  }
</style>
