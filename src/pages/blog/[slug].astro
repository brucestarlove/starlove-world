---
import Layout from "../../layouts/Layout.astro";
import BackButton from "../../components/ui/BackButton.astro";
import ContentReveal from "../../components/ui/ContentReveal.astro";
import TagList from "../../components/ui/TagList.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import "../../styles/components.css";

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'posts'>;
};

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <ContentReveal id="postDetail" class="post-detail">
    <nav class="post-nav">
      <BackButton href="/" text="Back to Home" />
    </nav>

    <header class="post-header">
      <div class="post-meta">
        <div class="post-info">
          <h1 class="post-title">{post.data.title}</h1>
          <p class="post-excerpt">{post.data.excerpt}</p>
          <div class="post-details">
            <span class="post-date"
              >{
                post.data.date.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })
              }</span
            >
            <TagList tags={post.data.tags} class="post-tags-header" />
          </div>
        </div>
      </div>
    </header>

    <main class="post-content">
      <div class="content-wrapper">
        <Content />
      </div>
    </main>
  </ContentReveal>

  <style>
    .post-detail {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.8s ease-out;
      padding-bottom: 6rem;
      max-width: 800px;
    }

    .post-detail.reveal {
      opacity: 1;
      transform: translateY(0);
    }

    /* Only hide content initially if JavaScript is available */
    .post-detail:not(.reveal) {
      opacity: 0;
      transform: translateY(20px);
    }

    .post-nav {
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(20px);
      animation: contentReveal 0.6s ease-out 0.2s forwards;
    }

    .back-button {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      background: var(--secondary-bg);
      border: 1px solid var(--border-color);
      color: var(--text-secondary);
      padding: 0.75rem 1rem;
      border-radius: 8px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .back-button:hover {
      background: var(--accent-bg);
      border-color: var(--accent-bg);
      color: white;
      transform: translateX(-2px);
    }

    .post-header {
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(30px);
      animation: contentReveal 0.8s ease-out 0.4s forwards;
    }

    .post-info {
      flex: 1;
    }

    .post-title {
      font-size: clamp(1.8rem, 5vw, 2.5rem);
      font-weight: 700;
      background: linear-gradient(135deg, var(--accent-bg), var(--glow-color));
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 0.5rem;
      line-height: 1.2;
    }

    .post-excerpt {
      font-size: 1.125rem;
      color: var(--text-secondary);
      line-height: 1.5;
      margin-bottom: 1rem;
    }

    .post-details {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      align-items: center;
    }

    .post-date {
      color: var(--text-secondary);
      font-size: 0.9rem;
      padding: 0.5rem 1rem;
      background: var(--secondary-bg);
      border-radius: 6px;
      border: 1px solid var(--border-color);
    }

    .post-tags-header {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .tag-badge {
      padding: 0.5rem 1rem;
      background: var(--primary-bg);
      color: var(--text-secondary);
      font-size: 0.85rem;
      border-radius: 6px;
      border: 1px solid var(--border-color);
      font-weight: 500;
      text-transform: lowercase;
    }

    .post-content {
      opacity: 0;
      transform: translateY(30px);
      animation: contentReveal 0.8s ease-out 0.6s forwards;
    }


    @keyframes contentReveal {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .post-meta {
        text-align: center;
      }

      .post-star.large {
        width: 56px;
        height: 56px;
        font-size: 20px;
        align-self: center;
      }

      .post-details {
        justify-content: center;
      }

      .back-button {
        padding: 0.6rem 0.8rem;
        font-size: 0.85rem;
      }
    }
  </style>

  <script>
    // Reveal content after page load
    function revealContent() {
      const postDetail = document.getElementById("postDetail");
      if (postDetail && !postDetail.classList.contains("reveal")) {
        postDetail.classList.add("reveal");
      }
    }

    function initializePostDetail() {
      revealContent();
    }

    // Initialize immediately if DOM is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initializePostDetail);
    } else {
      initializePostDetail();
    }

    // Also initialize after navigation
    document.addEventListener("astro:after-swap", initializePostDetail);

    // Fallback reveal
    setTimeout(revealContent, 100);
  </script>
</Layout>
