---
import Layout from "../layouts/Layout.astro";
import StarExplosion from "../components/StarExplosion.astro";
import { getAllPosts } from "../utils/posts.ts";

// Load posts from markdown files
const posts = getAllPosts();
---

<Layout title="Home">
  <StarExplosion />

  <div class="home-content" id="homeContent">
    <header class="hero">
      <div class="hero-header">
        <div class="title-row">
          <div class="logo-container">
            <div class="cycling-logo" id="cyclingLogo">
              <div class="logo-item active">ðŸŒŸ</div>
              <div class="logo-item">ðŸš€</div>
              <div class="logo-item">ðŸ’»</div>
              <div class="logo-item">ðŸŽ¨</div>
              <div class="logo-item">ðŸŒ™</div>
            </div>
          </div>
          <h1 class="hero-title" id="heroTitle">Bruce Starlove</h1>
        </div>
        <div class="hero-content" id="heroContent">
          <div class="hero-text">
            <p>
              Welcome to my digital space where I share thoughts on <strong
                >technology</strong
              >, <strong>design</strong>, and <strong>life</strong>. I'm
              passionate about creating meaningful experiences through code and
              fostering communities that drive positive change.
            </p>
            <p>
              Here you'll find my original content, curated shares, project
              updates, and reflections on the intersection of technology and
              humanity.
            </p>
          </div>

          <div class="social-links">
            <a
              href="https://github.com"
              class="social-link"
              aria-label="GitHub"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
                ></path>
              </svg>
            </a>
            <a
              href="https://twitter.com"
              class="social-link"
              aria-label="Twitter"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"
                ></path>
              </svg>
            </a>
            <a
              href="https://linkedin.com"
              class="social-link"
              aria-label="LinkedIn"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
                ></path>
              </svg>
            </a>
            <a
              href="mailto:hello@brucestarlove.com"
              class="social-link"
              aria-label="Email"
            >
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path
                  fill="currentColor"
                  d="M12 12.713l-11.985-9.713h23.971l-11.986 9.713zm-5.425-1.822l-6.575-5.329v12.501l6.575-7.172zm10.85 0l6.575 7.172v-12.501l-6.575 5.329zm-1.557 1.261l-3.868 3.135-3.868-3.135-8.11 8.848h23.956l-8.11-8.848z"
                ></path>
              </svg>
            </a>
          </div>
        </div>

        <section class="posts-section">
          <div class="search-container">
            <div class="search-bar">
              <svg
                class="search-icon"
                viewBox="0 0 24 24"
                width="20"
                height="20"
              >
                <path
                  fill="currentColor"
                  d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                ></path>
              </svg>
              <input
                type="text"
                id="searchInput"
                placeholder="Search posts..."
                class="search-input"
              />
            </div>
          </div>

          <div class="posts-list" id="postsList">
            {
              posts.map((post) => (
                <article
                  class="post-item"
                  data-tags={post.frontmatter.tags.join(", ")}
                  data-title={post.frontmatter.title.toLowerCase()}
                  data-excerpt={post.frontmatter.excerpt.toLowerCase()}
                  key={post.slug}
                >
                  <div
                    class="post-star"
                    style={`background-color: ${post.frontmatter.color}`}
                  >
                    â˜…
                  </div>
                  <div class="post-content">
                    <h3 class="post-title">{post.frontmatter.title}</h3>
                    <p class="post-excerpt">{post.frontmatter.excerpt}</p>
                    <div class="post-tags">
                      {post.frontmatter.tags.map((tag) => (
                        <span class="post-tag" key={tag}>
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                </article>
              ))
            }
          </div>
        </section>
      </div>
    </header>

    <style>
      .home-content {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.8s ease-out;
        padding-bottom: 6rem; /* Extra space for bottom navbar */
        padding-top: 0;
        margin-top: 0;
      }

      .home-content.reveal {
        opacity: 1;
        transform: translateY(0);
      }

      .hero {
        margin-bottom: 1.5rem;
        margin-top: 0;
        text-align: left;
        padding-top: 0;
      }

      .hero-header {
        margin-bottom: 1.5rem;
      }

      .title-row {
        display: flex;
        align-items: baseline;
        gap: 1.5rem;
        margin-bottom: 1rem;
      }

      .logo-container {
        position: relative;
        width: 80px;
        height: 80px;
      }

      .cycling-logo {
        width: 100%;
        height: 100%;
        border-radius: 12px;
        background: linear-gradient(
          135deg,
          var(--accent-bg),
          var(--glow-color)
        );
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        transition: all 0.3s ease;
      }

      .cycling-logo:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
      }

      .logo-item {
        position: absolute;
        font-size: 2rem;
        opacity: 0;
        transform: scale(0.5) rotate(180deg);
        transition: all 0.5s ease;
      }

      .logo-item.active {
        opacity: 1;
        transform: scale(1) rotate(0deg);
      }

      .hero-title {
        font-size: clamp(2rem, 7vw, 3rem);
        font-weight: 700;
        background: linear-gradient(
          135deg,
          var(--accent-bg),
          var(--glow-color)
        );
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
        margin-top: auto;
        opacity: 0;
        transform: translateY(30px);
        animation: titleReveal 1s ease-out 0.5s forwards;
      }

      .hero-content {
        opacity: 0;
        transform: translateY(20px);
        animation: contentReveal 0.8s ease-out 1.2s forwards;
      }

      .hero-text {
        font-size: 1rem;
        line-height: 1.4;
        color: var(--text-secondary);
        margin-bottom: 1rem;
        max-width: 600px;
      }

      .hero-text p {
        margin-bottom: 0.5rem;
      }

      .hero-text strong {
        color: var(--text-primary);
        font-weight: 600;
      }

      .social-links {
        display: flex;
        gap: 0.75rem;
        margin-bottom: 1rem;
      }

      .social-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        background: var(--secondary-bg);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        color: var(--text-secondary);
        text-decoration: none;
        transition: all 0.3s ease;
      }

      .social-link:hover {
        background: var(--accent-bg);
        border-color: var(--accent-bg);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
      }

      .posts-section {
        opacity: 0;
        transform: translateY(20px);
        animation: contentReveal 0.8s ease-out 1.5s forwards;
        margin-bottom: 1rem; /* Additional spacing before bottom padding */
      }

      .search-container {
        margin-bottom: 1rem;
      }

      .search-bar {
        position: relative;
        max-width: 400px;
      }

      .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-secondary);
        pointer-events: none;
        z-index: 1;
      }

      .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 3rem;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        background: var(--secondary-bg);
        color: var(--text-primary);
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .search-input:focus {
        outline: none;
        border-color: var(--accent-bg);
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
      }

      .search-input::placeholder {
        color: var(--text-secondary);
      }

      .posts-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
      }

      .post-item {
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        padding: 1rem;
        background: var(--secondary-bg);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        transition: all 0.3s ease;
        cursor: pointer;
      }

      .post-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border-color: var(--accent-bg);
      }

      [data-theme="dark"] .post-item:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
      }

      .post-star {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 12px;
        font-weight: bold;
        flex-shrink: 0;
        margin-top: 2px;
      }

      .post-content {
        flex: 1;
      }

      .post-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.25rem;
        margin-top: 0;
        line-height: 1.2;
      }

      .post-excerpt {
        color: var(--text-secondary);
        line-height: 1.3;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
      }

      .post-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
      }

      .post-tag {
        padding: 0.25rem 0.5rem;
        background: var(--primary-bg);
        color: var(--text-secondary);
        font-size: 0.75rem;
        border-radius: 4px;
        border: 1px solid var(--border-color);
      }

      @keyframes titleReveal {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes contentReveal {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @media (max-width: 768px) {
        .hero {
          margin-bottom: 1rem;
        }

        .hero-header {
          margin-bottom: 1rem;
        }

        .title-row {
          gap: 0.75rem;
          margin-bottom: 0.75rem;
        }

        .logo-container {
          width: 64px;
          height: 64px;
        }

        .logo-item {
          font-size: 1.5rem;
        }

        .hero-text {
          font-size: 0.9rem;
          line-height: 1.3;
        }

        .social-links {
          gap: 0.75rem;
        }

        .social-link {
          width: 36px;
          height: 36px;
        }

        .post-item {
          padding: 0.75rem;
          gap: 0.5rem;
        }

        .post-title {
          font-size: 1rem;
        }

        .post-star {
          width: 20px;
          height: 20px;
          font-size: 10px;
        }

        .search-bar {
          max-width: 100%;
        }

        .search-input {
          padding: 0.5rem 0.75rem 0.5rem 2.5rem;
          font-size: 0.875rem;
        }

        .search-icon {
          left: 0.75rem;
          width: 16px;
          height: 16px;
        }
      }
    </style>

    <script>
      // Handle star explosion completion
      document.addEventListener("starExplosionComplete", () => {
        const homeContent = document.getElementById("homeContent");
        if (homeContent) {
          homeContent.classList.add("reveal");
        }
      });

      // Fallback in case star explosion doesn't trigger (reduced by 1 second)
      setTimeout(() => {
        const homeContent = document.getElementById("homeContent");
        if (homeContent && !homeContent.classList.contains("reveal")) {
          homeContent.classList.add("reveal");
        }
      }, 3000);

      // Logo cycling functionality
      class LogoCycler {
        constructor() {
          this.logos = document.querySelectorAll(".logo-item");
          this.currentIndex = 0;
          this.startCycling();
        }

        startCycling() {
          setInterval(() => {
            this.logos[this.currentIndex].classList.remove("active");
            this.currentIndex = (this.currentIndex + 1) % this.logos.length;
            this.logos[this.currentIndex].classList.add("active");
          }, 3000); // Change every 3 seconds
        }
      }

      // Initialize logo cycling after DOM is loaded
      document.addEventListener("DOMContentLoaded", () => {
        new LogoCycler();
      });

      // Search functionality
      class PostSearch {
        private searchInput: HTMLInputElement | null;
        private postsList: HTMLElement | null;
        private allPosts: NodeListOf<HTMLElement>;

        constructor() {
          this.searchInput = document.getElementById(
            "searchInput"
          ) as HTMLInputElement;
          this.postsList = document.getElementById("postsList");
          this.allPosts = document.querySelectorAll(".post-item");
          this.init();
        }

        private init() {
          if (!this.searchInput) return;

          this.searchInput.addEventListener("input", (e) => {
            const query = (e.target as HTMLInputElement).value
              .toLowerCase()
              .trim();
            this.filterPosts(query);
          });

          // Show all posts initially
          this.showAllPosts();
        }

        private filterPosts(query: string) {
          this.allPosts.forEach((post) => {
            const title = post.getAttribute("data-title") || "";
            const excerpt = post.getAttribute("data-excerpt") || "";
            const tags = post.getAttribute("data-tags")?.toLowerCase() || "";

            const matches =
              title.includes(query) ||
              excerpt.includes(query) ||
              tags.includes(query);

            post.style.display = matches || query === "" ? "flex" : "none";
          });
        }

        private showAllPosts() {
          this.allPosts.forEach((post) => {
            post.style.display = "flex";
          });
        }
      }

      // Initialize search after DOM is loaded
      document.addEventListener("DOMContentLoaded", () => {
        new PostSearch();
      });
    </script>
  </div></Layout
>
