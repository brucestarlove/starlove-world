---
import Layout from "../layouts/Layout.astro";
import StarExplosion from "../components/StarExplosion.astro";
import ContentReveal from "../components/ui/ContentReveal.astro";
import SearchBar from "../components/ui/SearchBar.astro";
import TagList from "../components/ui/TagList.astro";
import CategoryFilter from "../components/ui/CategoryFilter.astro";
import CyclingLogo from "../components/CyclingLogo.astro";
import FeatureLinks from "../components/FeatureLinks.astro";
import LampTooltip from "../components/LampTooltip.astro";
import { getCollection } from "astro:content";

// Load posts from content collections and sort by date (newest first)
const posts = (await getCollection("posts")).sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Get unique categories for filter
const categories = [
  "tech",
  "activism",
  "starscape",
  "site log",
  "random thoughts",
  "short stories",
];

// Define category colors
const categoryColors = {
  "site log": "#89c9b8",
  tech: "#f2933d",
  starscape: "#006600",
  activism: "#ef4444",
  "random thoughts": "#f093fb",
  "short stories": "#8b5cf6",
};
---

<Layout title="Home">
  <StarExplosion />

  <ContentReveal id="homeContent" class="content">
    <header class="hero">
      <div class="hero-header">
        <div class="title-row">
          <CyclingLogo />
          <h1 class="hero-title animate-title-delayed" id="heroTitle">
            Starlove's lil world
          </h1>
        </div>
        <div class="hero-content animate-content-slow" id="heroContent">
          <div class="hero-text">
            <p>
              Welcome to my corner of webspace where I tinker with creative
              ideas and share thoughts on technology, <strong
                id="lampWord"
                class="lamp-trigger">stuff</strong
              >, and life.
            </p>
            <p>
              Hereâ€”eventually, not a priority yetâ€”you'll find some of my oc,
              curated shares, project updates, and reflections. Version 1.0
              start small //
            </p>
          </div>

          <FeatureLinks />
        </div>

        <div class="animate-content-extra-slow">
          <h2 class="section-title animate-title-delayed">
            October 2025: Currently Looking For Full-time Hire
          </h2>
          <p>
            Looking for full-time hybrid employment with a company that values
            initiative, creativity, growth and excellent user experience
          </p>

          <p>
            I'm a tech tinker, systems thinker, and creative technologist who
            has experimented a lot and now wants to join an existing company to
            grow and co-create bigger things. I still have much to learn, and
            desire to make greater impact expeditiously. I blend broad technical
            understanding with deep obsession, emotional intelligence, and a
            lifelong passion for understanding & solving problems.
          </p>

          <p>
            My background spans enterprise consulting, developer education,
            community organizing, and creative tech. I've led nonprofit web
            revamps, built community platforms from scratch, co-founded &
            managed student organizations (including my university's first
            hackathon, RAMHacks, 2014-2016), hosted dozens of webinars and
            interviews, and organized interdisciplinary symposia.
          </p>

          <p>
            I've recently been advising an early-stage startup and supporting
            small-org clients, while further developing my technical skills and
            prototyping several ambitious apps. I took a long sabbatical during
            the COVID-19 pandemic for health and exploration, while helping some
            small organizatons at-cost.
          </p>

          <h3 class="animate-title-delayed">ðŸ”­ what i&apos;m looking for</h3>
          <ul>
            <li>
              Senior Developer Relations Engineer or Senior Full-Stack Engineer
            </li>
            <li>
              On-site/hybrid in NYC, Richmond VA, Cincinnati OH, Austin TX, or
              somewhere new!
            </li>
            <li>
              Good, energetic, mission-aligned teams where I can contribute both
              code and knowledge-sharing
            </li>
            <li>
              Bonus: regenerative tech, education, social impact, public-good,
              etc.
            </li>
          </ul>
          <h3 class="animate-title-delayed">ðŸ§¬ skills n tools</h3>
          <ul>
            <li>
              <strong>Languages:</strong> TypeScript/JavaScript, Java, C#, SQL, PHP,
              Lua, learning Python
            </li>
            <li>
              <strong>Frameworks:</strong> React, Next.js, Astro, Angular, Vue, Spring
              Boot, .NET, Ionic, Android, iOS, Unity3D
            </li>
            <li>
              <strong>UI:</strong> Tailwind CSS, Radix/Shadcn, Framer Motion, GSAP,
              Material UI, Bootstrap, SCSS
            </li>
            <li>
              <strong>Platforms & CMS:</strong> Wordpress, Webflow, Shopify, Stripe,
              Bloomreach CMS, Contentful and other headless CMS, Ethereum/Polygon,
              Solana
            </li>
            <li>
              <strong>Data & Auth:</strong> PostgreSQL, Drizzle / Prisma, MongoDB,
              Supabase, NextAuth, OAuth, JWT
            </li>
            <li>
              <strong>Infra:</strong> AWS, Vercel, Railway, Netlify, Supabase, Neon,
              Jenkins, Docker, learning Temporal
            </li>
            <li>
              <strong>Testing:</strong> Jest/Vitest, Playwright, Cypress,, JUnit,
              Mockito, Cucumber, Postman
            </li>
            <li>
              <strong>Dev Tools:</strong> VSCode/Cursor, npm/pnpm/Yarn/Bun, Vite,
              Webpack/Turbopack, Zod, Postman
            </li>
            <li>
              <strong>AI Tools:</strong> OpenAI, Structify, Cursor, Claude Code,
              ChatGPT, Codex, Gemini, Grok, Lovable, v0, MagicPath, MagicPatterns,
              Midjourney, Leonardo, Kapwing
            </li>
            <li>
              <strong>Other Tools:</strong> Trello, Notion, Figma, Canva, Excalidraw,
              Prezi & slideshow software, spreadsheet software, various photo & video
              editors, Brain.fm for focus
            </li>
            <li>
              <strong>Accessibility & compliance:</strong> WCAG, ARIA, ADA, GDPR,
              HIPAA
            </li>
          </ul>
          <p>
            <strong>Other skills:</strong> self-reflexivity, endless curiosity, professional
            etiquette (e.g. representing company at networking events), presentation,
            articulation, intuition, emotional regulation, going with the flow, discernment
            (slop/bs detector), cooking, filtering for the best grocery deals, archery,
            and some other stuff
          </p>
          <ul>
            <li>
              <a href="/projects" class="themed-link">View my projects page</a>
            </li>
            <li>
              <a
                href="https://linkedin.com/in/brucestarlove"
                class="themed-link">LinkedIn</a
              >
            </li>
            <li>
              <a href="https://github.com/BruceStarlove" class="themed-link"
                >GitHub</a
              >
            </li>
          </ul>
        </div>

        <!-- <div class="animate-content-extra-slow">
          <SearchBar placeholder="Search posts..." id="searchInput" />
          <CategoryFilter
            categories={categories}
            categoryColors={categoryColors}
          />

          <div class="posts-list" id="postsList">
            {
              posts.map((post) => (
                <article
                  class="post-item"
                  style={`--post-color: ${post.data.color}`}
                  data-tags={post.data.tags.join(", ").toLowerCase()}
                  data-title={post.data.title.toLowerCase()}
                  data-excerpt={post.data.excerpt.toLowerCase()}
                  data-categories={post.data.categories
                    .join(", ")
                    .toLowerCase()}
                >
                  <a href={`/blog/${post.slug}`} class="item-link">
                    <div
                      class="item-star"
                      style={`background-color: ${post.data.color}`}
                    >
                      â˜…
                    </div>
                    <div class="item-content">
                      <h3 class="item-title">{post.data.title}</h3>
                      <p class="item-description">{post.data.excerpt}</p>
                      <TagList tags={post.data.tags} />
                    </div>
                  </a>
                </article>
              ))
            }
          </div>
        </div> -->
      </div>
    </header>

    <LampTooltip />

    <script>
      // Handle star explosion completion
      document.addEventListener("starExplosionComplete", () => {
        const cyberBg = document.querySelector(".cyber-bg");
        const taskbar = document.querySelector(".taskbar");
        if (cyberBg) cyberBg.classList.add("loaded");
        if (taskbar) taskbar.classList.add("reveal");
      });

      // Check on page load if we should reveal immediately (for View Transitions)
      document.addEventListener("astro:page-load", () => {
        const hasPlayed = sessionStorage.getItem("starExplosionPlayed");
        if (hasPlayed) {
          const cyberBg = document.querySelector(".cyber-bg");
          const taskbar = document.querySelector(".taskbar");

          if (cyberBg && !cyberBg.classList.contains("loaded"))
            cyberBg.classList.add("loaded");
          if (taskbar && !taskbar.classList.contains("reveal"))
            taskbar.classList.add("reveal");
        }
      });

      // Fallback reveal in case event doesn't fire
      setTimeout(() => {
        const cyberBg = document.querySelector(".cyber-bg");
        const taskbar = document.querySelector(".taskbar");

        if (cyberBg && !cyberBg.classList.contains("loaded"))
          cyberBg.classList.add("loaded");
        if (taskbar && !taskbar.classList.contains("reveal"))
          taskbar.classList.add("reveal");
      }, 3000);

      let currentCategory = "all";
      let currentSearchQuery = "";

      // Setup search and category filtering
      function setupFilters() {
        const searchInput = document.getElementById(
          "searchInput"
        ) as HTMLInputElement;
        const categoryButtons = document.querySelectorAll(".category-btn");

        if (!searchInput) {
          console.log("Search input not found, skipping setup");
          return;
        }

        console.log("Setting up filters...");

        // Remove any existing listeners by cloning the input
        const newSearchInput = searchInput.cloneNode(true) as HTMLInputElement;
        searchInput.parentNode?.replaceChild(newSearchInput, searchInput);

        // Add the search listener
        newSearchInput.addEventListener("input", (e) => {
          currentSearchQuery = (e.target as HTMLInputElement).value
            .toLowerCase()
            .trim();
          filterPosts();
        });

        // Add category filter listeners
        categoryButtons.forEach((btn) => {
          btn.addEventListener("click", () => {
            // Remove active class from all buttons
            categoryButtons.forEach((b) => b.classList.remove("active"));
            // Add active class to clicked button
            btn.classList.add("active");

            currentCategory = btn.getAttribute("data-category") || "all";
            filterPosts();
          });
        });

        console.log("Filters setup complete");
      }

      function filterPosts() {
        const allPosts = document.querySelectorAll(
          ".post-item"
        ) as NodeListOf<HTMLElement>;
        let visibleCount = 0;

        allPosts.forEach((post) => {
          const title = post.getAttribute("data-title") || "";
          const excerpt = post.getAttribute("data-excerpt") || "";
          const tags = post.getAttribute("data-tags") || "";
          const categories = post.getAttribute("data-categories") || "";

          const searchMatches =
            currentSearchQuery === "" ||
            title.includes(currentSearchQuery) ||
            excerpt.includes(currentSearchQuery) ||
            tags.includes(currentSearchQuery);

          const categoryMatches =
            currentCategory === "all" || categories.includes(currentCategory);

          const shouldShow = searchMatches && categoryMatches;
          post.style.display = shouldShow ? "flex" : "none";

          if (shouldShow) visibleCount++;
        });

        console.log(`Showing ${visibleCount} out of ${allPosts.length} posts`);
      }

      // Initialize filters
      document.addEventListener("DOMContentLoaded", setupFilters);
      document.addEventListener("astro:after-swap", () =>
        setTimeout(setupFilters, 100)
      );
      document.addEventListener("astro:page-load", () =>
        setTimeout(setupFilters, 100)
      );
    </script>
  </ContentReveal>
</Layout>

<style>
  .themed-link {
    color: var(--accent-bg);
    text-decoration: underline;
    transition: opacity 0.2s ease;
  }

  .themed-link:visited {
    color: var(--accent-bg);
  }

  .themed-link:hover {
    opacity: 0.8;
  }
</style>
